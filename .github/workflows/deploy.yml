name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Build site
      run: |
        # Criar estrutura para Pages
        mkdir -p _site
        
        # Copiar index.html da raiz
        cp index.html _site/
        
        # Copiar todos os assets necessários
        cp -r site_analise_dados _site/ 2>/dev/null || true
        cp -r css _site/ 2>/dev/null || true
        cp -r js _site/ 2>/dev/null || true
        cp -r assets _site/ 2>/dev/null || true
        cp -r aulas _site/ 2>/dev/null || true
        cp -r datasets _site/ 2>/dev/null || true
        cp -r materiais _site/ 2>/dev/null || true
        cp -r docs _site/ 2>/dev/null || true
        cp -r livro _site/ 2>/dev/null || true
        
        # Copiar arquivos importantes
        cp README.md _site/ 2>/dev/null || true
        cp _redirects _site/ 2>/dev/null || true
        cp netlify.toml _site/ 2>/dev/null || true
        
        # Criar arquivo .nojekyll para bypass Jekyll
        touch _site/.nojekyll
        
        # Verificar se arquivos principais existem
        echo "Verificando estrutura do site:"
        ls -la _site/
        echo "Conteúdo site_analise_dados:"
        ls -la _site/site_analise_dados/ 2>/dev/null || echo "Pasta site_analise_dados não encontrada"
        
        # Verificar se index.html existe e tem conteúdo
        if [ -f "_site/index.html" ]; then
          echo "index.html existe e tem $(wc -l < _site/index.html) linhas"
        else
          echo "ERRO: index.html não encontrado!"
          exit 1
        fi
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      id: deployment
      uses: actions/deploy-pages@v4
